.TH "Ephemeron.K1.Make" 3 2022-01-28 OCamldoc "OCaml library"
.SH NAME
Ephemeron.K1.Make \- Functor building an implementation of a weak hash table
.SH Module
Module   Ephemeron.K1.Make
.SH Documentation
.sp
Module
.BI "Make"
 : 
.B functor (H : Hashtbl.HashedType) -> sig end

.sp
Functor building an implementation of a weak hash table

.sp
.B "Parameters:"
.sp
"H"

.B Stdlib.Hashtbl.HashedType





.sp
.sp

.PP
Propose the same interface as usual hash table\&. However since
the bindings are weak, even if 
.ft B
mem h k
.ft R
is true, a subsequent
.ft B
find h k
.ft R
may raise 
.ft B
Not_found
.ft R
because the garbage collector
can run between the two\&.
.sp
Moreover, the table shouldn\&'t be modified during a call to 
.ft B
iter
.ft R
\&.
Use 
.ft B
filter_map_inplace
.ft R
in this case\&.
.PP
.I include Hashtbl.S
.sp

.sp

.I val clean 
: 
.B 'a t -> unit
.sp
remove all dead bindings\&. Done automatically during automatic resizing\&.

.sp

.I val stats_alive 
: 
.B 'a t -> Hashtbl.statistics
.sp
same as 
.ft B
Hashtbl\&.SeededS\&.stats
.ft R
but only count the alive bindings

.sp
