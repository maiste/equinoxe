(lang dune 2.9)
(name base)
(version v0.14.0)
(library
 (name base)
 (kind normal)
 (archives (byte base.cma) (native base.cmxa))
 (plugins (byte base.cma) (native base.cmxs))
 (foreign_objects am_testing.o exn_stubs.o hash_stubs.o int_math_stubs.o)
 (foreign_archives libbase_stubs.a)
 (native_archives base.a)
 (jsoo_runtime runtime.js)
 (requires base.base_internalhash_types base.caml sexplib0 base.shadow_stdlib)
 (main_module_name Base)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Base)
   (modules
    ((name Applicative)
     (obj_name base__Applicative)
     (visibility public)
     (impl)
     (intf))
    ((name Applicative_intf)
     (obj_name base__Applicative_intf)
     (visibility public)
     (impl))
    ((name Array) (obj_name base__Array) (visibility public) (impl) (intf))
    ((name Array0) (obj_name base__Array0) (visibility public) (impl))
    ((name Array_permute)
     (obj_name base__Array_permute)
     (visibility public)
     (impl))
    ((name Avltree)
     (obj_name base__Avltree)
     (visibility public)
     (impl)
     (intf))
    ((name Backtrace)
     (obj_name base__Backtrace)
     (visibility public)
     (impl)
     (intf))
    ((name Base) (obj_name base) (visibility public) (impl))
    ((name Binary_search)
     (obj_name base__Binary_search)
     (visibility public)
     (impl)
     (intf))
    ((name Binary_searchable)
     (obj_name base__Binary_searchable)
     (visibility public)
     (impl)
     (intf))
    ((name Binary_searchable_intf)
     (obj_name base__Binary_searchable_intf)
     (visibility public)
     (impl))
    ((name Blit) (obj_name base__Blit) (visibility public) (impl) (intf))
    ((name Blit_intf) (obj_name base__Blit_intf) (visibility public) (impl))
    ((name Bool) (obj_name base__Bool) (visibility public) (impl) (intf))
    ((name Buffer) (obj_name base__Buffer) (visibility public) (impl) (intf))
    ((name Buffer_intf)
     (obj_name base__Buffer_intf)
     (visibility public)
     (impl))
    ((name Bytes) (obj_name base__Bytes) (visibility public) (impl) (intf))
    ((name Bytes0) (obj_name base__Bytes0) (visibility public) (impl))
    ((name Bytes_set_primitives)
     (obj_name base__Bytes_set_primitives)
     (visibility public)
     (impl))
    ((name Bytes_tr) (obj_name base__Bytes_tr) (visibility public) (impl))
    ((name Char) (obj_name base__Char) (visibility public) (impl) (intf))
    ((name Char0) (obj_name base__Char0) (visibility public) (impl))
    ((name Comparable)
     (obj_name base__Comparable)
     (visibility public)
     (impl)
     (intf))
    ((name Comparable_intf)
     (obj_name base__Comparable_intf)
     (visibility public)
     (impl))
    ((name Comparator)
     (obj_name base__Comparator)
     (visibility public)
     (impl)
     (intf))
    ((name Comparisons)
     (obj_name base__Comparisons)
     (visibility public)
     (impl))
    ((name Container)
     (obj_name base__Container)
     (visibility public)
     (impl)
     (intf))
    ((name Container_intf)
     (obj_name base__Container_intf)
     (visibility public)
     (impl))
    ((name Either) (obj_name base__Either) (visibility public) (impl) (intf))
    ((name Either0) (obj_name base__Either0) (visibility public) (impl))
    ((name Either_intf)
     (obj_name base__Either_intf)
     (visibility public)
     (impl))
    ((name Equal) (obj_name base__Equal) (visibility public) (impl))
    ((name Error) (obj_name base__Error) (visibility public) (impl) (intf))
    ((name Exn) (obj_name base__Exn) (visibility public) (impl) (intf))
    ((name Field) (obj_name base__Field) (visibility public) (impl) (intf))
    ((name Fieldslib) (obj_name base__Fieldslib) (visibility public) (impl))
    ((name Float) (obj_name base__Float) (visibility public) (impl) (intf))
    ((name Float0) (obj_name base__Float0) (visibility public) (impl))
    ((name Floatable) (obj_name base__Floatable) (visibility public) (impl))
    ((name Fn) (obj_name base__Fn) (visibility public) (impl) (intf))
    ((name Formatter)
     (obj_name base__Formatter)
     (visibility public)
     (impl)
     (intf))
    ((name Hash) (obj_name base__Hash) (visibility public) (impl) (intf))
    ((name Hash_intf) (obj_name base__Hash_intf) (visibility public) (impl))
    ((name Hash_set)
     (obj_name base__Hash_set)
     (visibility public)
     (impl)
     (intf))
    ((name Hash_set_intf)
     (obj_name base__Hash_set_intf)
     (visibility public)
     (impl))
    ((name Hashable)
     (obj_name base__Hashable)
     (visibility public)
     (impl)
     (intf))
    ((name Hashable_intf)
     (obj_name base__Hashable_intf)
     (visibility public)
     (impl))
    ((name Hasher) (obj_name base__Hasher) (visibility public) (impl))
    ((name Hashtbl)
     (obj_name base__Hashtbl)
     (visibility public)
     (impl)
     (intf))
    ((name Hashtbl_intf)
     (obj_name base__Hashtbl_intf)
     (visibility public)
     (impl))
    ((name Hex_lexer)
     (obj_name base__Hex_lexer)
     (visibility public)
     (impl)
     (intf))
    ((name Identifiable)
     (obj_name base__Identifiable)
     (visibility public)
     (impl)
     (intf))
    ((name Import) (obj_name base__Import) (visibility public) (impl))
    ((name Import0) (obj_name base__Import0) (visibility public) (impl))
    ((name Indexed_container)
     (obj_name base__Indexed_container)
     (visibility public)
     (impl)
     (intf))
    ((name Indexed_container_intf)
     (obj_name base__Indexed_container_intf)
     (visibility public)
     (impl))
    ((name Info) (obj_name base__Info) (visibility public) (impl) (intf))
    ((name Info_intf) (obj_name base__Info_intf) (visibility public) (impl))
    ((name Int) (obj_name base__Int) (visibility public) (impl) (intf))
    ((name Int0) (obj_name base__Int0) (visibility public) (impl))
    ((name Int32) (obj_name base__Int32) (visibility public) (impl) (intf))
    ((name Int63) (obj_name base__Int63) (visibility public) (impl) (intf))
    ((name Int63_emul)
     (obj_name base__Int63_emul)
     (visibility public)
     (impl)
     (intf))
    ((name Int64) (obj_name base__Int64) (visibility public) (impl) (intf))
    ((name Int_conversions)
     (obj_name base__Int_conversions)
     (visibility public)
     (impl)
     (intf))
    ((name Int_intf) (obj_name base__Int_intf) (visibility public) (impl))
    ((name Int_math)
     (obj_name base__Int_math)
     (visibility public)
     (impl)
     (intf))
    ((name Intable) (obj_name base__Intable) (visibility public) (impl))
    ((name Invariant)
     (obj_name base__Invariant)
     (visibility public)
     (impl)
     (intf))
    ((name Invariant_intf)
     (obj_name base__Invariant_intf)
     (visibility public)
     (impl))
    ((name Lazy) (obj_name base__Lazy) (visibility public) (impl) (intf))
    ((name Linked_queue)
     (obj_name base__Linked_queue)
     (visibility public)
     (impl)
     (intf))
    ((name Linked_queue0)
     (obj_name base__Linked_queue0)
     (visibility public)
     (impl))
    ((name List) (obj_name base__List) (visibility public) (impl) (intf))
    ((name List0) (obj_name base__List0) (visibility public) (impl))
    ((name List1) (obj_name base__List1) (visibility public) (impl))
    ((name Map) (obj_name base__Map) (visibility public) (impl) (intf))
    ((name Map_intf) (obj_name base__Map_intf) (visibility public) (impl))
    ((name Maybe_bound)
     (obj_name base__Maybe_bound)
     (visibility public)
     (impl)
     (intf))
    ((name Monad) (obj_name base__Monad) (visibility public) (impl) (intf))
    ((name Monad_intf) (obj_name base__Monad_intf) (visibility public) (impl))
    ((name Nativeint)
     (obj_name base__Nativeint)
     (visibility public)
     (impl)
     (intf))
    ((name Nothing)
     (obj_name base__Nothing)
     (visibility public)
     (impl)
     (intf))
    ((name Obj_array)
     (obj_name base__Obj_array)
     (visibility public)
     (impl)
     (intf))
    ((name Option) (obj_name base__Option) (visibility public) (impl) (intf))
    ((name Option_array)
     (obj_name base__Option_array)
     (visibility public)
     (impl)
     (intf))
    ((name Or_error)
     (obj_name base__Or_error)
     (visibility public)
     (impl)
     (intf))
    ((name Ordered_collection_common)
     (obj_name base__Ordered_collection_common)
     (visibility public)
     (impl)
     (intf))
    ((name Ordering)
     (obj_name base__Ordering)
     (visibility public)
     (impl)
     (intf))
    ((name Poly0) (obj_name base__Poly0) (visibility public) (impl) (intf))
    ((name Popcount)
     (obj_name base__Popcount)
     (visibility public)
     (impl)
     (intf))
    ((name Pow_overflow_bounds)
     (obj_name base__Pow_overflow_bounds)
     (visibility public)
     (impl)
     (intf))
    ((name Ppx_compare_lib)
     (obj_name base__Ppx_compare_lib)
     (visibility public)
     (impl)
     (intf))
    ((name Ppx_enumerate_lib)
     (obj_name base__Ppx_enumerate_lib)
     (visibility public)
     (impl))
    ((name Ppx_hash_lib)
     (obj_name base__Ppx_hash_lib)
     (visibility public)
     (impl))
    ((name Ppx_sexp_conv_lib)
     (obj_name base__Ppx_sexp_conv_lib)
     (visibility public)
     (impl))
    ((name Pretty_printer)
     (obj_name base__Pretty_printer)
     (visibility public)
     (impl)
     (intf))
    ((name Printf) (obj_name base__Printf) (visibility public) (impl) (intf))
    ((name Queue) (obj_name base__Queue) (visibility public) (impl) (intf))
    ((name Queue_intf) (obj_name base__Queue_intf) (visibility public) (impl))
    ((name Random) (obj_name base__Random) (visibility public) (impl) (intf))
    ((name Ref) (obj_name base__Ref) (visibility public) (impl) (intf))
    ((name Result) (obj_name base__Result) (visibility public) (impl) (intf))
    ((name Sequence)
     (obj_name base__Sequence)
     (visibility public)
     (impl)
     (intf))
    ((name Set) (obj_name base__Set) (visibility public) (impl) (intf))
    ((name Set_intf) (obj_name base__Set_intf) (visibility public) (impl))
    ((name Sexp) (obj_name base__Sexp) (visibility public) (impl) (intf))
    ((name Sexp_with_comparable)
     (obj_name base__Sexp_with_comparable)
     (visibility public)
     (impl)
     (intf))
    ((name Sexpable)
     (obj_name base__Sexpable)
     (visibility public)
     (impl)
     (intf))
    ((name Sexplib) (obj_name base__Sexplib) (visibility public) (impl))
    ((name Sign) (obj_name base__Sign) (visibility public) (impl) (intf))
    ((name Sign0) (obj_name base__Sign0) (visibility public) (impl))
    ((name Sign_or_nan)
     (obj_name base__Sign_or_nan)
     (visibility public)
     (impl)
     (intf))
    ((name Source_code_position)
     (obj_name base__Source_code_position)
     (visibility public)
     (impl)
     (intf))
    ((name Source_code_position0)
     (obj_name base__Source_code_position0)
     (visibility public)
     (impl))
    ((name Stack) (obj_name base__Stack) (visibility public) (impl) (intf))
    ((name Stack_intf) (obj_name base__Stack_intf) (visibility public) (impl))
    ((name Staged) (obj_name base__Staged) (visibility public) (impl) (intf))
    ((name String) (obj_name base__String) (visibility public) (impl) (intf))
    ((name String0) (obj_name base__String0) (visibility public) (impl))
    ((name Stringable) (obj_name base__Stringable) (visibility public) (impl))
    ((name Sys) (obj_name base__Sys) (visibility public) (impl) (intf))
    ((name Sys0) (obj_name base__Sys0) (visibility public) (impl))
    ((name T) (obj_name base__T) (visibility public) (impl))
    ((name Type_equal)
     (obj_name base__Type_equal)
     (visibility public)
     (impl)
     (intf))
    ((name Uchar) (obj_name base__Uchar) (visibility public) (impl) (intf))
    ((name Uchar0) (obj_name base__Uchar0) (visibility public) (impl))
    ((name Uniform_array)
     (obj_name base__Uniform_array)
     (visibility public)
     (impl)
     (intf))
    ((name Unit) (obj_name base__Unit) (visibility public) (impl) (intf))
    ((name Validate)
     (obj_name base__Validate)
     (visibility public)
     (impl)
     (intf))
    ((name Variant)
     (obj_name base__Variant)
     (visibility public)
     (impl)
     (intf))
    ((name Variantslib)
     (obj_name base__Variantslib)
     (visibility public)
     (impl))
    ((name With_return)
     (obj_name base__With_return)
     (visibility public)
     (impl)
     (intf))
    ((name Word_size)
     (obj_name base__Word_size)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Base__)
    (obj_name base__)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name base.base_internalhash_types)
 (kind normal)
 (archives
  (byte base_internalhash_types/base_internalhash_types.cma)
  (native base_internalhash_types/base_internalhash_types.cmxa))
 (plugins
  (byte base_internalhash_types/base_internalhash_types.cma)
  (native base_internalhash_types/base_internalhash_types.cmxs))
 (foreign_objects base_internalhash_types/internalhash_stubs.o)
 (foreign_archives base_internalhash_types/libbase_internalhash_types_stubs.a)
 (native_archives base_internalhash_types/base_internalhash_types.a)
 (jsoo_runtime base_internalhash_types/runtime.js)
 (main_module_name Base_internalhash_types)
 (modes byte native)
 (modules
  (singleton
   (name Base_internalhash_types)
   (obj_name base_internalhash_types)
   (visibility public)
   (impl))))
(library
 (name base.caml)
 (kind normal)
 (archives (byte caml/caml.cma) (native caml/caml.cmxa))
 (plugins (byte caml/caml.cma) (native caml/caml.cmxs))
 (native_archives caml/caml.a)
 (main_module_name Caml)
 (modes byte native)
 (modules (singleton (name Caml) (obj_name caml) (visibility public) (impl))))
(library
 (name base.md5)
 (kind normal)
 (archives (byte md5/md5_lib.cma) (native md5/md5_lib.cmxa))
 (plugins (byte md5/md5_lib.cma) (native md5/md5_lib.cmxs))
 (native_archives md5/md5_lib.a)
 (main_module_name Md5_lib)
 (modes byte native)
 (modules
  (singleton
   (name Md5_lib)
   (obj_name md5_lib)
   (visibility public)
   (impl)
   (intf))))
(library
 (name base.shadow_stdlib)
 (kind normal)
 (archives
  (byte shadow_stdlib/shadow_stdlib.cma)
  (native shadow_stdlib/shadow_stdlib.cmxa))
 (plugins
  (byte shadow_stdlib/shadow_stdlib.cma)
  (native shadow_stdlib/shadow_stdlib.cmxs))
 (native_archives shadow_stdlib/shadow_stdlib.a)
 (requires base.caml)
 (main_module_name Shadow_stdlib)
 (modes byte native)
 (modules
  (singleton
   (name Shadow_stdlib)
   (obj_name shadow_stdlib)
   (visibility public)
   (impl)
   (intf))))
